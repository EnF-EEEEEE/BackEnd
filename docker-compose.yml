services:
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    env_file:
      - ./data/mysql/env.mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    volumes:
      - enf_data:/var/lib/mysql
      - ./data/mysql/schema-mysql.sql:/docker-entrypoint-initdb.d/schema-mysql.sql
    networks:
      - enf-network

  api:
    build:
      context: EnF
      dockerfile: Dockerfile
    container_name: api
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    environment:
      ACTIVE_PROFILE: prod
    ports:
      - "8080:8080"
    networks:
      - enf-network

  npm:
    image: 'jc21/nginx-proxy-manager:2.11.3'
    container_name: npm
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      - DB_MYSQL_HOST=mysql
      - DB_MYSQL_PORT=3306
      - DB_MYSQL_USER=enf
      - DB_MYSQL_PASSWORD=1234
      - DB_MYSQL_NAME = home
    volumes:
      - ./data/npm/data:/data
      - ./data/npm/letsencrypt:/etc/letsencrypt
    networks:
      - enf-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - enf-network
    restart: on-failure

  # Prometheus 서비스 추가
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # prometheus.yml 파일 마운트
      - prometheus_data:/prometheus                      # 데이터 영구 저장을 위한 볼륨
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - enf-network

  # Grafana 서비스 추가
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana  # 데이터 영구 저장을 위한 볼륨
    environment:
      - GF_SECURITY_ADMIN_USER=admin   # 관리자 사용자 이름
      - GF_SECURITY_ADMIN_PASSWORD=admin  # 관리자 비밀번호
      - GF_USERS_ALLOW_SIGN_UP=false  # 회원가입 비활성화
    depends_on:
      - prometheus
    networks:
      - enf-network

volumes:
  enf_data:
  prometheus_data: # 추가
  grafana_data:    # 추가

networks:
  enf-network:
    driver: bridge